title = paste("Edge", 1:8),
# smooth
smooth = c(FALSE, TRUE),
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE))
# head(edges)
#  from to  label length    arrows dashes  title smooth shadow
#    10  7 Edge 1    100        to   TRUE Edge 1  FALSE  FALSE
#     4 10 Edge 2    500      from  FALSE Edge 2   TRUE   TRUE
nodes <- data.frame(id = 1:10, group = c("A", "B"))
visNetwork(nodes, edges, height = "500px", width = "100%")
library('visNetwork')
edges <- data.frame(from = sample(1:10,8), to = sample(1:10, 8),
# add labels on edges
label = paste("Edge", 1:8),
# length
length = c(100,500),
# width
width = c(4,1, 5),
# arrows
arrows = c("to", "from", "middle", "middle;to"),
# dashes
dashes = c(TRUE, FALSE),
# tooltip (html or character)
title = paste("Edge", 1:8),
# smooth
smooth = c(FALSE, TRUE),
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE))
# head(edges)
#  from to  label length    arrows dashes  title smooth shadow
#    10  7 Edge 1    100        to   TRUE Edge 1  FALSE  FALSE
#     4 10 Edge 2    500      from  FALSE Edge 2   TRUE   TRUE
nodes <- data.frame(id = 1:10, group = c("A", "B"))
visNetwork(nodes, edges, height = "500px", width = "100%")
View(edges)
nodes <- data.frame(id = 1:10,
# add labels on nodes
label = paste("Node", 1:10),
# add groups on nodes
group = c("GrA", "GrB"),
# size adding value
value = 1:10,
# control shape of nodes
shape = c("square", "triangle", "box", "circle", "dot", "star",
"ellipse", "database", "text", "diamond"),
# tooltip (html or character), when the mouse is above
title = paste0("<p><b>", 1:10,"</b><br>Node !</p>"),
# color
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE, TRUE))
# head(nodes)
# id  label group value    shape                     title    color shadow
#  1 Node 1   GrA     1   square <p><b>1</b><br>Node !</p>  darkred  FALSE
#  2 Node 2   GrB     2 triangle <p><b>2</b><br>Node !</p>     grey   TRUE
edges <- data.frame(from = c(1,2,5,7,8,10), to = c(9,3,1,6,4,7))
visNetwork(nodes, edges, height = "500px", width = "100%")
paste("Node", 1:10)
typeof(paste("Node", 1:10))
nodes <- data.frame(id = 1:10,
# add labels on nodes
label = c(paste("Node", 1:10)),
# add groups on nodes
group = c("GrA", "GrB"),
# size adding value
value = 1:10,
# control shape of nodes
shape = c("square", "triangle", "box", "circle", "dot", "star",
"ellipse", "database", "text", "diamond"),
# tooltip (html or character), when the mouse is above
title = paste0("<p><b>", 1:10,"</b><br>Node !</p>"),
# color
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE, TRUE))
# head(nodes)
# id  label group value    shape                     title    color shadow
#  1 Node 1   GrA     1   square <p><b>1</b><br>Node !</p>  darkred  FALSE
#  2 Node 2   GrB     2 triangle <p><b>2</b><br>Node !</p>     grey   TRUE
edges <- data.frame(from = c(1,2,5,7,8,10), to = c(9,3,1,6,4,7))
visNetwork(nodes, edges, height = "500px", width = "100%")
nodes <- data.frame(id = 1:10,
# add labels on nodes
label = list(paste("Node", 1:10)),
# add groups on nodes
group = c("GrA", "GrB"),
# size adding value
value = 1:10,
# control shape of nodes
shape = c("square", "triangle", "box", "circle", "dot", "star",
"ellipse", "database", "text", "diamond"),
# tooltip (html or character), when the mouse is above
title = paste0("<p><b>", 1:10,"</b><br>Node !</p>"),
# color
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE, TRUE))
# head(nodes)
# id  label group value    shape                     title    color shadow
#  1 Node 1   GrA     1   square <p><b>1</b><br>Node !</p>  darkred  FALSE
#  2 Node 2   GrB     2 triangle <p><b>2</b><br>Node !</p>     grey   TRUE
edges <- data.frame(from = c(1,2,5,7,8,10), to = c(9,3,1,6,4,7))
visNetwork(nodes, edges, height = "500px", width = "100%")
nodes <- data.frame(id = 1:10,
# add labels on nodes
label = c(paste("Node", 1:10)),
# add groups on nodes
group = c("GrA", "GrB"),
# size adding value
value = 1:10,
# control shape of nodes
shape = c("square", "triangle", "box", "circle", "dot", "star",
"ellipse", "database", "text", "diamond"),
# tooltip (html or character), when the mouse is above
title = paste0("<p><b>", 1:10,"</b><br>Node !</p>"),
# color
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE, TRUE))
# head(nodes)
# id  label group value    shape                     title    color shadow
#  1 Node 1   GrA     1   square <p><b>1</b><br>Node !</p>  darkred  FALSE
#  2 Node 2   GrB     2 triangle <p><b>2</b><br>Node !</p>     grey   TRUE
edges <- data.frame(from = c(1,2,5,7,8,10), to = c(9,3,1,6,4,7))
visNetwork(nodes, edges, height = "500px", width = "100%")
?paste
edges <- data.frame(from = sample(1:10,8), to = sample(1:10, 8),
# add labels on edges
label = paste("Edge", 1:8),
# length
length = c(100,500),
# width
width = c(4,1),
# arrows
arrows = c("to", "from", "middle", "middle;to"),
# dashes
dashes = c(TRUE, FALSE),
# tooltip (html or character)
title = paste("Edge", 1:8),
# smooth
smooth = c(FALSE, TRUE),
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE))
# head(edges)
#  from to  label length    arrows dashes  title smooth shadow
#    10  7 Edge 1    100        to   TRUE Edge 1  FALSE  FALSE
#     4 10 Edge 2    500      from  FALSE Edge 2   TRUE   TRUE
nodes <- data.frame(id = 1:10, group = c("A", "B"))
visNetwork(nodes, edges, height = "500px", width = "100%")
View(edges)
edges <- data.frame(from = sample(1:10,8), to = sample(1:10, 8),
# add labels on edges
label = paste("Edge", 1:8),
# length
length = c(100,500),
# width
width = c(4,1),
# arrows
# arrows = c("to", "from", "middle", "middle;to"),
# dashes
dashes = c(TRUE, FALSE),
# tooltip (html or character)
title = paste("Edge", 1:8),
# smooth
smooth = c(FALSE, TRUE),
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE))
# head(edges)
#  from to  label length    arrows dashes  title smooth shadow
#    10  7 Edge 1    100        to   TRUE Edge 1  FALSE  FALSE
#     4 10 Edge 2    500      from  FALSE Edge 2   TRUE   TRUE
nodes <- data.frame(id = 1:10, group = c("A", "B"))
visNetwork(nodes, edges, height = "500px", width = "100%")
edges <- data.frame(from = sample(1:10,8), to = sample(1:10, 8),
# add labels on edges
label = paste("Edge", 1:8),
# length
length = c(100,500),
# width
width = c(4,1),
# arrows
arrows = c("to", "from", "middle", "middle;to"),
# dashes
dashes = c(TRUE, FALSE),
# tooltip (html or character)
title = paste("Edge", 1:8),
# smooth
smooth = c(FALSE, TRUE),
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE))
# head(edges)
#  from to  label length    arrows dashes  title smooth shadow
#    10  7 Edge 1    100        to   TRUE Edge 1  FALSE  FALSE
#     4 10 Edge 2    500      from  FALSE Edge 2   TRUE   TRUE
nodes <- data.frame(id = 1:10, group = c("A", "B"))
visNetwork(nodes, edges, height = "500px", width = "100%")
edges <- data.frame(from = sample(1:10,8), to = sample(1:10, 8),
# add labels on edges
label = paste("Edge", 1:8),
# length
length = c(100,500),
# width
width = c(1,1),
# arrows
arrows = c("to", "from", "middle", "middle;to"),
# dashes
dashes = c(TRUE, FALSE),
# tooltip (html or character)
title = paste("Edge", 1:8),
# smooth
smooth = c(FALSE, TRUE),
# shadow
shadow = c(FALSE, TRUE, FALSE, TRUE))
# head(edges)
#  from to  label length    arrows dashes  title smooth shadow
#    10  7 Edge 1    100        to   TRUE Edge 1  FALSE  FALSE
#     4 10 Edge 2    500      from  FALSE Edge 2   TRUE   TRUE
nodes <- data.frame(id = 1:10, group = c("A", "B"))
visNetwork(nodes, edges, height = "500px", width = "100%")
library(ggplot2)
library(stats)
setwd('/home/com3dian/Documents/github/Period1/MAIR/Lecture8/Group_assignment_stats/')
data <- read.csv('MAIR.csv')
colnames(data) <- c('time', 'option', 'agreement', 'gender', 'age', 'student', 'dutch',
'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10')
dataClean <- data[data$age != 'dit is een test, niet gebruiken voor analyse',]
dataClean[is.na(dataClean)] <- 0
# pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods,
#                      paired = TRUE, …)
preprocess <- function(df){
df1<-df[, -c(1:7)]
for (colNum in c(2, 4, 6, 8, 10)){
df1[, colNum]= -strtoi(df1[, colNum]) + 4
}
return(c(rowSums(df1)))
}
dataClean$sumscore <- preprocess(dataClean)
res <- wilcox.test(sumscore ~ option, data = dataClean, p.adjust = "bonf",
paired = TRUE, alternative = 'greater')
res
b <- ggplot(dataClean, aes(x = option, y = sumscore, fill = option),  ) +
ggdist::stat_halfeye(
adjust = .5,
width = .32,
.width = .1,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .085,
outlier.shape = NA
) +
## add justified jitter from the {gghalves} package
gghalves::geom_half_point(
## draw jitter on the left
side = "l",
## control range of jitter
range_scale = .4,
## add some transparency
alpha = 0.5
) +
theme(text = element_text(size=20)) +
coord_flip() +
scale_fill_manual(values=c('On' = "#FF0075", 'Off' = "#000D6B"))+
labs(title = 'Raincloud')
b
library(ggplot2)
library(stats)
setwd('/home/com3dian/Documents/github/Period1/MAIR/Lecture8/Group_assignment_stats/')
data <- read.csv('MAIR.csv')
colnames(data) <- c('time', 'option', 'agreement', 'gender', 'age', 'student', 'dutch',
'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10')
dataClean <- data[data$age != 'dit is een test, niet gebruiken voor analyse',]
dataClean[is.na(dataClean)] <- 0
# pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods,
#                      paired = TRUE, …)
preprocess <- function(df){
df1<-df[, -c(1:7)]
for (colNum in c(2, 4, 6, 8, 10)){
df1[, colNum]= -strtoi(df1[, colNum]) + 4
}
return(c(rowSums(df1)))
}
dataClean$sumscore <- preprocess(dataClean)
res <- wilcox.test(sumscore ~ option, data = dataClean, p.adjust = "bonf",
paired = TRUE, alternative = 'greater')
res
b <- ggplot(dataClean, aes(x = option, y = sumscore, fill = option),  ) +
ggdist::stat_halfeye(
adjust = .5,
width = .32,
.width = .1,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .085,
outlier.shape = NA
) +
## add justified jitter from the {gghalves} package
gghalves::geom_half_point(
## draw jitter on the left
side = "l",
## control range of jitter
range_scale = .4,
## add some transparency
alpha = 0.5
) +
theme(text = element_text(size=40)) +
coord_flip() +
scale_fill_manual(values=c('On' = "#FF0075", 'Off' = "#000D6B"))+
labs(title = 'Raincloud')
b
library(ggplot2)
library(stats)
setwd('/home/com3dian/Documents/github/Period1/MAIR/Lecture8/Group_assignment_stats/')
data <- read.csv('MAIR.csv')
colnames(data) <- c('time', 'option', 'agreement', 'gender', 'age', 'student', 'dutch',
'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10')
dataClean <- data[data$age != 'dit is een test, niet gebruiken voor analyse',]
dataClean[is.na(dataClean)] <- 0
# pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods,
#                      paired = TRUE, …)
preprocess <- function(df){
df1<-df[, -c(1:7)]
for (colNum in c(2, 4, 6, 8, 10)){
df1[, colNum]= -strtoi(df1[, colNum]) + 4
}
for (colNum in c(1:10)){
df1[, colNum]= -strtoi(df1[, colNum]) + 4
}
return(c(rowSums(df1)))
}
dataClean$sumscore <- preprocess(dataClean)
res <- wilcox.test(sumscore ~ option, data = dataClean, p.adjust = "bonf",
paired = TRUE, alternative = 'greater')
res
b <- ggplot(dataClean, aes(x = option, y = sumscore, fill = option),  ) +
ggdist::stat_halfeye(
adjust = .5,
width = .32,
.width = .1,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .085,
outlier.shape = NA
) +
## add justified jitter from the {gghalves} package
gghalves::geom_half_point(
## draw jitter on the left
side = "l",
## control range of jitter
range_scale = .4,
## add some transparency
alpha = 0.5
) +
theme(text = element_text(size=40)) +
coord_flip() +
scale_fill_manual(values=c('On' = "#FF0075", 'Off' = "#000D6B"))+
labs(title = 'Raincloud')+
geom_half_dotplot(method="histodot", stackdir="up")
b
library(ggplot2)
library(stats)
setwd('/home/com3dian/Documents/github/Period1/MAIR/Lecture8/Group_assignment_stats/')
data <- read.csv('MAIR.csv')
colnames(data) <- c('time', 'option', 'agreement', 'gender', 'age', 'student', 'dutch',
'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10')
dataClean <- data[data$age != 'dit is een test, niet gebruiken voor analyse',]
dataClean[is.na(dataClean)] <- 0
# pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods,
#                      paired = TRUE, …)
preprocess <- function(df){
df1<-df[, -c(1:7)]
for (colNum in c(2, 4, 6, 8, 10)){
df1[, colNum]= -strtoi(df1[, colNum]) + 4
}
for (colNum in c(1:10)){
df1[, colNum]= -strtoi(df1[, colNum]) *2.5
}
return(c(rowSums(df1)))
}
dataClean$sumscore <- preprocess(dataClean)
res <- wilcox.test(sumscore ~ option, data = dataClean, p.adjust = "bonf",
paired = TRUE, alternative = 'greater')
res
b <- ggplot(dataClean, aes(x = option, y = sumscore, fill = option),  ) +
ggdist::stat_halfeye(
adjust = .5,
width = .32,
.width = .1,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .085,
outlier.shape = NA
) +
## add justified jitter from the {gghalves} package
gghalves::geom_half_point(
## draw jitter on the left
side = "l",
## control range of jitter
range_scale = .4,
## add some transparency
alpha = 0.5
) +
theme(text = element_text(size=40)) +
coord_flip() +
scale_fill_manual(values=c('On' = "#FF0075", 'Off' = "#000D6B"))+
labs(title = 'Raincloud')+
geom_half_dotplot(method="histodot", stackdir="up")
b
library(ggplot2)
library(stats)
setwd('/home/com3dian/Documents/github/Period1/MAIR/Lecture8/Group_assignment_stats/')
data <- read.csv('MAIR.csv')
colnames(data) <- c('time', 'option', 'agreement', 'gender', 'age', 'student', 'dutch',
'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10')
dataClean <- data[data$age != 'dit is een test, niet gebruiken voor analyse',]
dataClean[is.na(dataClean)] <- 0
# pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods,
#                      paired = TRUE, …)
preprocess <- function(df){
df1<-df[, -c(1:7)]
for (colNum in c(2, 4, 6, 8, 10)){
df1[, colNum]= -strtoi(df1[, colNum]) + 4
}
for (colNum in c(1:10)){
df1[, colNum]= -strtoi(df1[, colNum]) *2.5
}
return(c(rowSums(df1)))
}
dataClean$sumscore <- preprocess(dataClean)
res <- wilcox.test(sumscore ~ option, data = dataClean, p.adjust = "bonf",
paired = TRUE, alternative = 'greater')
res
b <- ggplot(dataClean, aes(x = option, y = sumscore, fill = option),  ) +
ggdist::stat_halfeye(
adjust = .5,
width = .32,
.width = .1,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .085,
outlier.shape = NA
) +
## add justified jitter from the {gghalves} package
gghalves::geom_half_point(
## draw jitter on the left
side = "l",
## control range of jitter
range_scale = .4,
## add some transparency
alpha = 0.5
) +
theme(text = element_text(size=40)) +
coord_flip() +
scale_fill_manual(values=c('On' = "#FF0075", 'Off' = "#000D6B"))+
labs(title = 'Raincloud')
b
library(ggplot2)
library(stats)
setwd('/home/com3dian/Documents/github/Period1/MAIR/Lecture8/Group_assignment_stats/')
data <- read.csv('MAIR.csv')
colnames(data) <- c('time', 'option', 'agreement', 'gender', 'age', 'student', 'dutch',
'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'Q9', 'Q10')
dataClean <- data[data$age != 'dit is een test, niet gebruiken voor analyse',]
dataClean[is.na(dataClean)] <- 0
# pairwise.wilcox.test(x, g, p.adjust.method = p.adjust.methods,
#                      paired = TRUE, …)
preprocess <- function(df){
df1<-df[, -c(1:7)]
for (colNum in c(2, 4, 6, 8, 10)){
df1[, colNum]= -strtoi(df1[, colNum]) + 4
}
for (colNum in c(1:10)){
df1[, colNum]= strtoi(df1[, colNum]) *2.5
}
return(c(rowSums(df1)))
}
dataClean$sumscore <- preprocess(dataClean)
res <- wilcox.test(sumscore ~ option, data = dataClean, p.adjust = "bonf",
paired = TRUE, alternative = 'greater')
res
b <- ggplot(dataClean, aes(x = option, y = sumscore, fill = option),  ) +
ggdist::stat_halfeye(
adjust = .5,
width = .32,
.width = .1,
justification = -.2,
point_colour = NA
) +
geom_boxplot(
width = .085,
outlier.shape = NA
) +
## add justified jitter from the {gghalves} package
gghalves::geom_half_point(
## draw jitter on the left
side = "l",
## control range of jitter
range_scale = .4,
## add some transparency
alpha = 0.5
) +
theme(text = element_text(size=40)) +
coord_flip() +
scale_fill_manual(values=c('On' = "#FF0075", 'Off' = "#000D6B"))+
labs(title = 'Raincloud')
b
